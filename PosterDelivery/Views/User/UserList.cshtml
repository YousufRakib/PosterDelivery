
@{

    ViewBag.Title = "User List";
}

<div class="col-md-12">
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">@ViewBag.Title</h3>
            <div style="float: right">
                <button class="btn" id="btnExport">
                  <img src="~/images/icons/file-excel.svg" title="Export Users List" alt="Export Users List" style="width: 40px; height: 35px">
                </button>
            </div>
        </div>

        <div class="box-body">
            <div id="UserList"></div>
        </div>
    </div>
</div>

<script id="EditLinkTemplate" type="text/x-kendo-template">
    <a style="font-size:11px; text-decoration: none;" href="/User/AddUser?UserId=#= userId #" target="_self">#= firstName # #= lastName #</a>
</script>

<script id="actionTemplate" type="text/x-kendo-template">
    <a style="font-size:11px; text-decoration: none;" href="javascript: DeleteUser(#= userId #);" class="btn btn-small btn-info" target="_self">Delete</a>
</script>

<script type="text/javascript">

    var url = "/User/GetUserList";
    var createUrl = "/User/AddUser";
    var deleteUrl = "/User/DeleteUser";

    $(document).ready(function () {
        function ShowUserList() {
            $.ajax({
                type: "GET",
                url: url,
                contentType: false,
                processData: false,
                success: function (response) {
                    console.log(response);
                    var gridDataSource = response.returnvalue;
                    $("#UserList").kendoGrid({
                        toolbar: [
                            {
                                name: "Create",
                                text: "Create",
                            },
                        ],
                        dataSource: gridDataSource,
                        scrollable: true,
                        filterable: true,
                        resizable: true,
                        pageable: {
                            refresh: true,
                            input: true,
                            pageSize: 20,
                            numeric: false,
                            pageSizes: [10, 20, 50, 100, 200]
                        },
                        sortable: true,
                        columns: [
                            { field: "userId", title: "Id", width: 100,media: "(min-width: 100px;)", filterable: false, hidden: true },
                            {
                                title: "Name", width: 120, filterable: false,
                                template: kendo.template($("#EditLinkTemplate").html())
                            },
                            { field: "emailId", title: "Email", width: 120, media: "(min-width: 100px;)", filterable: false },
                            { field: "userName", title: "Username", width: 120, media: "(min-width: 100px;)", filterable: false },
                            { field: "userRole", title: "User Role", width: 100, media: "(min-width: 100px;)", filterable: false },
                            { field: "isActive", title: "Status", width: 100, media: "(min-width: 100px;)", filterable: false },
                            {
                                title: "Action", width: "12%",
                                template: kendo.template($("#actionTemplate").html())
                            },
                        ]
                    });

                    function searchInGrid() {
                        var searchValue = $('#searchBox').val();

                        $("#UserList").data("kendoGrid").dataSource.filter({
                            logic: "or",
                            filters: [
                                {
                                    field: "emailId",
                                    operator: "contains",
                                    value: searchValue
                                },
                                {
                                    field: "userRole",
                                    operator: "contains",
                                    value: searchValue
                                }
                            ]
                        });
                    }

                    $(".k-grid-Create").click(function (e) {
                        window.location.href = createUrl;
                    });

                    $("#btnSearch").click(function () {
                        searchInGrid();
                    });

                    $('#searchBox').mouseup(function () {
                        setTimeout(function () {
                            if ($('#searchBox').val() === '') {
                                $("#UserList").data("kendoGrid").dataSource.filter({});
                            };
                        }, 1)
                    });

                    $("#searchBox").keyup(function (event) {
                        if (event.keyCode === 13) {
                            searchInGrid();
                        }
                    });
                }
            });
        }
        ShowUserList();
    });

    function DeleteUser(userId) {
        Loading(true);
        $.ajax({
            type: "POST",
            url: deleteUrl + "?UserId=" + parseInt(userId),
            contentType: false,
            success: function (respose) {
                Loading(false);
                console.log(respose);
                if (respose.output === "Success") {
                    swal("Success", respose.msg, "success");
                    window.location.href = "/User/UserList";
                    return false;
                }
                else if (respose.output === "DataTypeIssue") {
                    swal("Oops", respose.msg, "error");
                    return false;
                }
                else {
                    swal("Oops", respose.msg, "error");
                    return false;
                }
            },
            error: function (respose) {
                swal("Oops!", respose.msg, "error");
                return false;
            },
        });
    }

    $("#btnExport").click(function (e) {
        
        var dataSource = $("#UserList").data("kendoGrid").dataSource;
        var filteredDataSource = new kendo.data.DataSource({
            data: dataSource.data(),
            filter: dataSource.filter()
        });

        filteredDataSource.read();
        var data = filteredDataSource.view();

        const csvString = arrayToCSV(data);
        const blob = new Blob([csvString], { type: 'text/csv' });
        const link = document.createElement('a');
        link.href = URL.createObjectURL(blob);
        link.download = 'UserList.csv';
        document.body.appendChild(link);
        link.click();

        //var result = "";

        //result += "<table><tr><th>Name</th><th>Email</th><th>Username</th><th>User Role</th></tr>";

        //for (var i = 0; i < data.length; i++) {
        //    result += "<tr>";

        //    result += "<td>";
        //    result += data[i].firstName + " " + data[i].lastName;
        //    result += "</td>";

        //    result += "<td>";
        //    result += data[i].emailId;
        //    result += "</td>";

        //    result += "<td>";
        //    result += data[i].userName;
        //    result += "</td>";

        //    result += "<td>";
        //    result += data[i].userRole;
        //    result += "</td>";

        //    result += "</tr>";
        //}

        //result += "</table>";

        //if (window.navigator.msSaveBlob) {
        //    window.navigator.msSaveBlob(new Blob([result]), 'Users_List.xlsx');
        //} else {
        //    var csvData = new Blob([result], { type: 'text/csv' }); //new way
        //    var csvUrl = URL.createObjectURL(csvData);
        //    var link = document.createElement("a");
        //    link.setAttribute("href", csvUrl);
        //    link.setAttribute("download", "Users_List.xls");
        //    document.body.appendChild(link); // Required for FF
        //    link.click();
        //}

        e.preventDefault();
    });

    function arrayToCSV(array) {
        let csvString = 'Name,Email,UserName,User Role\n'; // Add the headers
        for (let i = 0; i < array.length; i++) {
            const object = array[i];
          csvString += `"${object.firstName} ${object.lastName}","${object.emailId}","${object.userName}","${object.userRole}"\n`;
        }
        return csvString;
    }

</script>

